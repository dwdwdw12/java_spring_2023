브라우저에서 요청(get방식) http://localhost:8888/
=> web.xml => <welcome-file>index.jsp</welcome-file> => http://localhost:8888/index.jsp 페이지를 응답

응답페이지에서 <a href="./BoardList.bo">게시판</a> 을 클릭
=> 게시판 보기(http://localhost:8888/BoardList.bo)를 요청(get방식의 요청)
=>web.xml 
=> url 매핑을 통해서 <servlet-class>net.board.controller.BoardFrontController</servlet-class> 프로그램을 실행(doGet 메서드) 
	=>doProcess(request, response)를 호출
		-uri("/BoardList.bo"를 의미)를 구하고 contextpath(mvcboard에서 ""으로 설정)를 구한다.
		-uri에서 command("/BoardList.bo")를 얻어낸다. uri.substring(contextpath.length()=>0) 
			=>uri.substring(0)==uri에 있던 값과 동일
		-command와 같은 문자열을 if 구문을 이용해서 찾는다.
			...
			Action action = null;
			ActionForward forward = null;	->다음으로 수행할 경로를 갖는 필드와 
			...					Redirect 유무를 확인하는 논리형 필드
			else if (command.equals("/BoardList.bo")) {
				action = new BoardListAction();
				try {
					forward = action.execute(request, response);
						->DAO에게 일을 시키고 응답 페이지에서 필요한 자료를 
						request 영역에 속성으로 넣어주고 Forwarding(false)
						관련된 정보와 경로를 반환한다.
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			...
			if (forward.isRedirect()) {
				response.sendRedirect(forward.getPath());
			} else {
				RequestDispatcher dispatcher = request.getRequestDispatcher(forward.getPath());	
 				dispatcher.forward(request, response);		->./board/qna_board_list.jsp로 포워딩
			}
		-./board/qna_board_list.jsp가 동작을 한다.
			-list의 개수만큼 반복해서 자료를 나타내주는데...
				-번호, 제목, 작성자, 작성일, 조회수를 하나의 tr로 묶어서 나타내주고(요약정보)
			-이전, 페이지 리스트, 다음 페이지 링크를 상황에 따라서 적당하게 나타내주고
			-글쓰기(새 게시글 쓰기) 링크를 나타내준다.

A) http://localhost:8888/BoardWrite.bo <= 글쓰기(새글쓰기)를 선택했을 때
B) http://localhost:8888/BoardDetailAction.bo?num=11 <=상세글 보기 제목을 클릭했을 때
C) http://localhost:8888/BoardList.bo?page=2 <=특정 페이지의 목록보기 또는 이전/이후 페이지 목록 보기 

A)
<a href="./BoardWrite.bo">[글쓰기]</a>를 클릭하면 => 브라우저의 주소 http://localhost:8888/BoardWrite.bo을 요청했다.
=>1) web.xml => .bo와 매핑된 서블릿(BoardFrontController)의 doGet(request, response) 메서드를 호출 -> doProcess(request, response)로 넘어간다.
 command="/BoardWrite.bo"
 if-else if 구문에서 조건에 맞는 것을 찾아 수행한다. 
	=>단순하게 입력 화면을 나타내는 jsp 파일로 forwarding 해준다. ((접속중인) 브라우저의 주소는 변하지 않는다)...보안문제
	=>view 파일에서 게시글에 관련된 내용을 작성하고 등록버튼을 클릭
		(form action = "./BoardAddAction.bo"의 post방식으로 요청이 이루어진다.)
=>2) web.xml => .bo와 매핑된 서블릿(BoardFrontController)의 doPost(request, response) 메서드를 호출 -> doProcess(request, response)로 넘어간다.
 command=/BoardAddAction.bo

