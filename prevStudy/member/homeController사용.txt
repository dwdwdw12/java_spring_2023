http://localhost:8080/member/
dongwoo.jsp라는 페이지를 응답페이지로 만들고 싶다.

http://localhost:8080/member/test
test.jsp라는 페이지를 응답페이지로 만들고 싶다.

http://localhost:8080/member/getMember?memId=id1
http://localhost:8080/member/delMember
http://localhost:8080/member/listMember


0.src>main>webapp>WEB-INF>spring>root-context.xml 에 bean 객체 등록 및 연결정보 작성.
1. src>main>WEB-INF>web.xml
	1)url-pattern에 /가 삽입된다면, appServlet을 구동.
	2)appServlet에는 dispatherServlet이 들어있고, 해당 servelet은 servlet-context.xml의 설정정보가 들어있음
2. src>main>WEB-INF>spring>appServlet>servlet-context.xml
	-jsp파일이 응답페이지로 쓰일 때 사용됨.
	-component-scan으로 bean으로 등록된 class를 탐색 -> HomeController.jsp 탐지
	-@Controller의 반환값에 접두어/접미어를 사용 ->/WEB-INF/views/......jsp	
3. com.dongwoo.member > HomeController.java
	-return값을 2번의 경로에 해당하는 파일명으로 변경. 서버 실행시(run on server) 해당 jsp파일이 웹페이지에 출력
	-@RequestMapping을 추가적으로 사용, 상세경로를 지정해 jsp 파일을 연결할 수 있음.

*****
@RequestMapping(value = "경로", method = RequestMethod.GET)	->get 방식의 RequestMapping을 사용	
							(jsp파일에서 get/post 방식을 사용하는지 확인)
public String memberjoin(MemberVO vo, Model model) {}
	->데이터를 넘겨줄 필요가 있을 때, model 작성이 필요
		-model.addAttribute(값에 대한 변수 ,넘겨줄 값)