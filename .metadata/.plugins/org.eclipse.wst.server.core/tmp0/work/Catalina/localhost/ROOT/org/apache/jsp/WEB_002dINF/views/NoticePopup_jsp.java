/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-12-15 00:18:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class NoticePopup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/javaWork/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1691733144298L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("  \r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("font-family: SF Pro KR, SF Pro Display, SF Pro Icons, AOS Icons, Apple Gothic, HY Gulim, MalgunGothic, HY Dotum, Lexi Gulim, Helvetica Neue, Helvetica, Arial, sans-serif;\r\n");
      out.write(".layerPopup img{\r\n");
      out.write(" max-width: 100%;\r\n");
      out.write("    height: auto;\r\n");
      out.write("    display: block; /* 이미지 사이에 추가 공백 제거 */\r\n");
      out.write("    margin: 0 auto; /* 중앙 정렬 */}\r\n");
      out.write(".layerPopup:before {display:block; content:\"\"; position:fixed; left:0; top:0; width:100%; height:100%; background:rgba(0,0,0,.5); z-index:9000}\r\n");
      out.write(".layerPopup .layerBoxNotice {    z-index:10000;   \r\n");
      out.write("position:fixed; left:50%; top:50%; transform:translate(-50%, -50%); padding:30px; background:#fff; border-radius:6px; width: 900px;}\r\n");
      out.write(".layerPopup #layer_popup_notice .layerBoxNotice {\r\n");
      out.write("    top: 60%;\r\n");
      out.write("}\r\n");
      out.write(".layerPopup .layerBoxNotice .title {margin-bottom:10px; padding-bottom:10px; font-weight:600; border-bottom:1px solid #d9d9d9;}\r\n");
      out.write(".layerPopup .layerBoxNotice .btnTodayHide {\r\n");
      out.write("font-size:14px; font-weight:600; color:black; \r\n");
      out.write("float: left;text-decoration:none;width: 150px; \r\n");
      out.write("height : 30px;line-height:30px;border:black solid 1px; text-align : center;text-decoration:none;\r\n");
      out.write("}\r\n");
      out.write(".layerPopup div{ \r\n");
      out.write("	display : inline;\r\n");
      out.write("	width : 800px;\r\n");
      out.write("}\r\n");
      out.write(".layerPopup form{\r\n");
      out.write("	margin-top : 5px;\r\n");
      out.write("	font-size:16px; font-weight:600;\r\n");
      out.write("	max-width: 800px;\r\n");
      out.write("	weight: 100%;\r\n");
      out.write("	height : 30px;\r\n");
      out.write("	line-height:30px\r\n");
      out.write("}\r\n");
      out.write(".layerPopup #close { \r\n");
      out.write("font-size:16px; font-weight:600; width: 40px; height : 30px;color:black; float: right; line-height:30px; text-align : center;text-decoration:underline;\r\n");
      out.write("}\r\n");
      out.write(".layerPopup a{\r\n");
      out.write("	text-decoration : none;\r\n");
      out.write("	color : black;width: 50px;height : 40px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"layerPopup\" id=\"layer_popup_notice\" style=\"visibility: visible;\">\r\n");
      out.write("    <div class=\"layerBoxNotice\"> \r\n");
      out.write("		<h4 class=\"title\"> <a  href=\"/notice/list\"> Kakao Airline 긴급 공지사항</a></h4>\r\n");
      out.write("        <div class=\"cont\">\r\n");
      out.write("            <p style=\"color:red\">\r\n");
      out.write("<img src=\"/resources/img/alert.png\" onerror=\"this.style.display='none'\" width=20px height=auto usemap=\"#popup\" alt=\"event page\">\r\n");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		\r\n");
      out.write("            </p>\r\n");
      out.write("        </div>\r\n");
      out.write("          <form name=\"pop_form\">\r\n");
      out.write("        <div id=\"check\" ><input type=\"checkbox\" name=\"chkbox_notice\" value=\"checkbox\" id='chkbox_notice' >\r\n");
      out.write("        <label for=\"chkbox_notice\">&nbsp&nbsp오늘 하루동안 보지 않기</label></div>\r\n");
      out.write("		<div id=\"close\" ><a href=\"#\" class=\"notice-close\" onclick=\"closePop('layer_popup_notice');\" data-modal-id=\"layer_popup_notice\">닫기</a></div>    \r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write(" <script>\r\n");
      out.write(" \r\n");
      out.write(" function closePop(modalId) {\r\n");
      out.write("	  var modal = document.getElementById(modalId);\r\n");
      out.write("\r\n");
      out.write("	    if (modal) {\r\n");
      out.write("	        modal.style.display = \"none\";\r\n");
      out.write("	    } else {\r\n");
      out.write("	        console.log(\"모달이 존재하지 않음\");\r\n");
      out.write("	    }\r\n");
      out.write("	}\r\n");
      out.write(" \r\n");
      out.write(" $(document).ready(function(){\r\n");
      out.write("	 console.log(\"ddd\");\r\n");
      out.write("	 function setCookie(name, value, expiredays) {\r\n");
      out.write("		    var todayDate = new Date();\r\n");
      out.write("		    todayDate.setDate(todayDate.getDate() + expiredays);\r\n");
      out.write("		    document.cookie = name + \"=\" + encodeURIComponent(value) + \"; path=/; expires=\" + todayDate.toGMTString() + \";\";\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	   $(\".notice-close\").on(\"click\", function (e) {\r\n");
      out.write("	        e.preventDefault();\r\n");
      out.write("	        var chkbox = $(this).closest('.layerPopup').find('#chkbox_notice')[0];\r\n");
      out.write("	        console.log(\"box>>\" + chkbox);\r\n");
      out.write("\r\n");
      out.write("	        if (chkbox) {\r\n");
      out.write("	            if (chkbox && chkbox.checked !== undefined && chkbox.checked) {\r\n");
      out.write("	                setCookie(\"maindiv_notice\", \"done\", 1);\r\n");
      out.write("	            } else {\r\n");
      out.write("	                console.log(\"안찍힘\");\r\n");
      out.write("	            }\r\n");
      out.write("	        } else {\r\n");
      out.write("	            console.log(\"chkbox가 존재하지 않음\");\r\n");
      out.write("	        }\r\n");
      out.write("\r\n");
      out.write("	        var modalId = $(this).data(\"modal-id\");\r\n");
      out.write("	        closePop(modalId);\r\n");
      out.write("	    });\r\n");
      out.write("	   \r\n");
      out.write("	   \r\n");
      out.write("\r\n");
      out.write("       // 수정: 페이지 로딩 시에 쿠키를 읽고 상태에 따라 모달을 띄울지 말지 결정\r\n");
      out.write("		 function checkCookie() {\r\n");
      out.write("		        var cookiedata_notice = document.cookie;\r\n");
      out.write("		        if (cookiedata_notice.indexOf(\"maindiv_notice=done\") < 0) {\r\n");
      out.write("		            $('#layer_popup_notice').css('display', 'block');\r\n");
      out.write("		        } else {\r\n");
      out.write("		            $('#layer_popup_notice').css('display', 'none');\r\n");
      out.write("		        }\r\n");
      out.write("		\r\n");
      out.write("		    }\r\n");
      out.write("\r\n");
      out.write("       window.onload = checkCookie(); // 수정: 페이지 로딩 시에 checkCookie 함수 호출\r\n");
      out.write("  \r\n");
      out.write(" })\r\n");
      out.write("     </script> \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/NoticePopup.jsp(58,0) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/NoticePopup.jsp(58,0) '${emer}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${emer}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/NoticePopup.jsp(58,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("emer");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write(' ');
            out.write('\r');
            out.write('\n');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${emer.boardcontent}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("<hr>\r\n");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
